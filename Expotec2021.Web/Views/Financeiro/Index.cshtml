@{
    ViewData["Title"] = "Financeiro";
}

@model FinanceiroViewModel 
@using Expotec2021.Domain.Entities

<link rel="stylesheet" href="~/css/launchs.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">



<div id="usuario" class="container-fluid mt-5">
    <div class="container">
        <div class="row">
            @await Html.PartialAsync("identity/_Navigation")
            <div class="col-md-8 container-fluid" >
                <div class="row vh">
                    <div class="col-md-6">
                        <div class="d-flex justify-content-center"> 
                            <button type="button" class="btn btn-primary ml-5" data-toggle="modal" data-target="#exampleModalCenter">
                                novo lan√ßamento <i class="bi bi-cash-coin" style="font-size: 17px;"></i>
                            </button>
                            <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered" role="document">
                                    <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLongTitle">Fazer Lan√ßamento</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <form asp-controller="Financeiro" asp-action="Create" method="POST">
                                            <div class="form-group">
                                                <label for="recipient-name" class="col-form-label">Nome:</label>
                                                <input asp-for="LaunchsDTO.Name" type="text" class="form-control"  />
                                            </div>
                                            <div class="form-group">
                                                <label for="recipient-name" class="col-form-label">Pre√ßo:</label>
                                                <input asp-for="LaunchsDTO.price" id="price" type="text" class="form-control"  /><span>,00</span>
                                            </div>
                                             <div class="form-group">
                                               <select asp-for="LaunchsDTO.Operation" asp-items="Html.GetEnumSelectList<Operation>()"class="form-control" ></select>
                                            </div>
                                            <div>
                                               <select asp-for="LaunchsDTO.CategoryId" class="form-control" asp-items="ViewBag.ClienteId"> </select>
                                            </div>
                                            <button type="submit" class="btn btn-primary mt-3">Fazer Lan√ßamento</button>
                                        </form>
                                    </div>
                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                            <div style="width: 100%;" class="mt-4">
                                <canvas id="iso" width="400" height="400"></canvas>
                            </div>
                            <div style="width: 100%;" class="mt-4">
                                <canvas id="myChart" width="400" height="400"></canvas>
                            </div> 
                        </div>
                        <div class="col-md-6">
                            <h4 class="text-center">Lan√ßamentos üöÄ</h4>
                            <div class="custon-launchs">

                                @foreach (var item in Model.ListLaunhsDTO)
                                {
                                <div class="launchs">
                                    @if (((int)item.Operation) == 1)
                                    {
                                        <span class="">
                                            <i class="bi bi-chevron-double-up positivo"></i>
                                        </span>
                                        <span class="price "> @Html.DisplayFor(modelItem => item.Name)</span>
                                        <span>@Html.DisplayFor(modelItem => item.CreateDate)</span>
                                        <div>
                                            <span class="price " id="pricePositivo"> @Html.DisplayFor(modelItem => item.price)</span>
                                        </div>
                                        
                                    }
                                    @if (((int)item.Operation) == 0)
                                    {
                                        <span class="">
                                            <i class="bi bi-chevron-double-down negativo"></i>
                                        </span>
                                        <span class="price "> @Html.DisplayFor(modelItem => item.Name)</span>
                                        <span>@Html.DisplayFor(modelItem => item.CreateDate)</span>
                                        <div>
                                            <span class="price " id="priceNegativo">@Html.DisplayFor(modelItem => item.price)</span>
                                        </div>
                                       
                                    }
                                </div>
                                }
                            </div>
                        </div>              
                    </div>    
                </div>
                  @await Html.PartialAsync("Acho/_InformationUser", @Model.user)
            </div>
        </div>
    </div>
    <div>
</div>




@section Scripts{
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="~/js/jquery.mask.js"></script>
<script>
$(document).ready(function(){
    $('#price').mask('#,00', {reverse:true});
});



async function getApiCategories()
{   
    var idUsuario = '@ViewBag.UserIdTeste';
    console.log(idUsuario)
    var url = `https://apiexpotec2021.azurewebsites.net/api/tarefas/${idUsuario}`;

    var response = await fetch(url, {method : 'GET'})
    if(response.ok)
    {
        var result = await response.json();
        var launchs = result;

        let conta  = 0;
        let comida = 0;
        let medico = 0;
        let compra = 0;
        let investimentos = 0;
        let diversos = 0;

        for(let lau of launchs)
        {
            if(lau.categoryId == 1  )
            {
                conta += lau.price;
            }

            if(lau.categoryId == 2 )
            {
                comida += lau.price;
            }

            if(lau.categoryId == 3 )
            {
                medico += lau.price;
            }

            if(lau.categoryId == 4 )
            {
                compra += lau.price;
            }
            if(lau.categoryId == 5 )
            {
                investimentos += lau.price;
            }
            if(lau.categoryId == 6 )
            {
                
                diversos += lau.price;
            }

           
        }


        var ctx = document.getElementById('myChart');
        var myChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['Contas', 'Comidas', 'Compras', 'Rem√©dios', 'Investimentos', 'Diversos'],
                datasets: [{
                    label: '# of Votes',
                    data: [conta, comida, compra, medico, investimentos, diversos],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: false
                    }
                }
            }
        });

    }else{
        console.log("Deu erro")
    }

}


function iniciar()
{
        let valorPositivo = 0;
        const valoresPositivo = document.querySelectorAll('#pricePositivo').
        forEach(c =>  valorPositivo+= parseFloat(c.innerText));

        let valorNegativo = 0;
        const valoresNegativo = document.querySelectorAll('#priceNegativo').
        forEach(c => console.log( valorNegativo+= parseFloat(c.innerText)));


        var ctx = document.getElementById('iso');
        var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Despesas','Entradas',],
            datasets: [{
                label:'',
                data: [valorNegativo,valorPositivo],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(75, 192, 192, 1)',
                    
                ],
                borderWidth: 1
            }]
        },
        options: {
            pluginns:{
                legend:{
                    diplay:false
                }
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    }); 




    getApiCategories();
}
 
 document.addEventListener('DOMContentLoaded', iniciar());
</script>

}
